{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Social Networking\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../App';\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      //console.log(result)\n      setData(result.posts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result: \"+JSON.stringify(result))\n      // console.log(\"item: \"+JSON.stringify(data[0]))\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const [toggle, setToggle] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            color: \"grey\",\n            fontFamily: 'cursive'\n          },\n          children: [\"Posted by \", item.postedBy.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\"\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              unlikePost(item._id);\n            },\n            children: \"thumb_down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              likePost(item._id);\n            },\n            children: \"thumb_up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [item.likes.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this), toggle ? item.comments.map(record => {\n            return /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"700\"\n                },\n                children: [record.postedBy.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 66\n              }, this), record.text]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 45\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"300\"\n            },\n            children: \"Click on show below to see comments..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              makeComment(e.target[0].value, item._id);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-primary\",\n              onClick: () => {\n                setToggle(!toggle);\n              },\n              children: \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"hiCJRkOVK2MvPbcOv+G2909pd6E=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Social Networking/Frontend/client/src/components/screens/Home.js"],"names":["React","useState","useEffect","useContext","UserContext","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","posts","likePost","id","method","body","JSON","stringify","postId","newdata","map","item","_id","catch","err","console","log","unlikePost","makeComment","text","toggle","setToggle","color","fontFamily","postedBy","name","photo","likes","includes","length","title","comments","record","fontWeight","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Home=()=>{\r\n    const [data,setData]=useState([])\r\n    const {state,dispatch}=useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(\"result: \"+JSON.stringify(result))\r\n            // console.log(\"item: \"+JSON.stringify(data[0]))\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment=(text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const [toggle,setToggle]=useState(false)\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return (\r\n                        <div key={item._id} className=\"card home-card\">\r\n                            <h5 style={{color:\"grey\",fontFamily:'cursive'}}>Posted by {item.postedBy.name}</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <i className=\"material-icons\" style={{color: \"red\"}}>favorite</i>\r\n                                {\r\n                                    item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\r\n                                    :\r\n                                    <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    toggle\r\n                                    ?\r\n                                    item.comments.map(record=>{\r\n                                        return (\r\n                                            <h6 key={record._id}><span style={{fontWeight:\"700\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <p style={{fontWeight:\"300\"}}>Click on show below to see comments..</p>\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"Add a comment\"/>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setToggle(!toggle)}}>Show</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}