{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\Social Networking\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../App';\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //result means the updated post\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          //return result\n          return { ...item,\n            likes: result.likes\n          };\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newdata = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      }); //newdata means the entire updated array consisting of all the posts of every user in the home page.\n\n      setData(newdata);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            color: \"grey\",\n            fontFamily: 'cursive'\n          },\n          children: [\"Posted by \", item.postedBy.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\"\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              unlikePost(item._id);\n            },\n            children: \"thumb_down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              likePost(item._id);\n            },\n            children: \"thumb_up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [item.likes.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"kLS/0ojS7ut9bSkV1n2Vnvv0y/8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Raj/Desktop/Social Networking/Frontend/client/src/components/screens/Home.js"],"names":["React","useState","useEffect","useContext","UserContext","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","console","log","posts","likePost","id","method","body","JSON","stringify","postId","newdata","map","item","_id","likes","catch","err","unlikePost","color","fontFamily","postedBy","name","photo","includes","length","title"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Home=()=>{\r\n    const [data,setData]=useState([])\r\n    const {state,dispatch}=useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\": \"token \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //result means the updated post\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    //return result\r\n                    return { ...item, likes: result.likes }\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"token \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            //newdata means the entire updated array consisting of all the posts of every user in the home page.\r\n            setData(newdata)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return (\r\n                        <div key={item._id} className=\"card home-card\">\r\n                            <h5 style={{color:\"grey\",fontFamily:'cursive'}}>Posted by {item.postedBy.name}</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <i className=\"material-icons\" style={{color: \"red\"}}>favorite</i>\r\n                                {\r\n                                    item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\r\n                                    :\r\n                                    <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                <input type=\"text\" placeholder=\"Add a comment\"/>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}